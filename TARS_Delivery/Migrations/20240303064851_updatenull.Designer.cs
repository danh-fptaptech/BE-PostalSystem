// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TARS_Delivery.Models;

#nullable disable

namespace TARS_Delivery.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240303064851_updatenull")]
    partial class updatenull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Branches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "1234 TARS Street",
                            BranchName = "TARS Delivery",
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2656),
                            District = "TARS",
                            PhoneNumber = "123456789",
                            PostalCode = "1234",
                            Province = "TARS",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2669)
                        },
                        new
                        {
                            Id = 2,
                            Address = "1234 TARS Street",
                            BranchName = "TARS Delivery 2",
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2678),
                            District = "TARS",
                            PhoneNumber = "123456789",
                            PostalCode = "1234",
                            Province = "TARS",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2679)
                        },
                        new
                        {
                            Id = 3,
                            Address = "1234 TARS Street",
                            BranchName = "TARS Delivery 3",
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2680),
                            District = "TARS",
                            PhoneNumber = "123456789",
                            PostalCode = "1234",
                            Province = "TARS",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2681)
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TypeInfo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Số 1, Đường 1, Phường 1, Quận 1, TP HCM",
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2775),
                            District = "Quận 1",
                            Name = "Nguyễn Văn Customer",
                            PhoneNumber = "0123456789",
                            Province = "TP HCM",
                            Status = 1,
                            TypeInfo = 0,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2776),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Address = "Số 2, Đường 2, Phường 2, Quận 2, TP HCM",
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2779),
                            District = "Quận 2",
                            Name = "Trần Thị Customer",
                            PhoneNumber = "0987654321",
                            Province = "TP HCM",
                            Status = 1,
                            TypeInfo = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2779),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Address = "Số 3, Đường 3, Phường 3, Quận 3, TP HCM",
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2781),
                            District = "Quận 3",
                            Name = "Lê Văn Customer",
                            PhoneNumber = "044333333",
                            Province = "TP HCM",
                            Status = 1,
                            TypeInfo = 0,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2782),
                            UserId = 3
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubmitedInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("EmployeeCode")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Số 1, Đường 1, Phường 1, Quận 1, TP HCM",
                            Avatar = "avatar.jpg",
                            BranchId = 1,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2812),
                            District = "Quận 1",
                            Email = "emp1@emp1",
                            EmployeeCode = "EMP001",
                            Fullname = "Nguyễn Văn Employee",
                            Password = "123",
                            PhoneNumber = "0123456789",
                            PostalCode = "700000",
                            Province = "TP HCM",
                            RoleId = 1,
                            Status = 1,
                            SubmitedInfo = "SubmitedInfo",
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2812)
                        },
                        new
                        {
                            Id = 2,
                            Address = "Số 2, Đường 2, Phường 2, Quận 2, TP HCM",
                            Avatar = "avatar.jpg",
                            BranchId = 2,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2816),
                            District = "Quận 2",
                            Email = "emp2@emp2",
                            EmployeeCode = "EMP002",
                            Fullname = "Trần Thị Employee",
                            Password = "123",
                            PhoneNumber = "0987654321",
                            PostalCode = "700000",
                            Province = "TP HCM",
                            RoleId = 2,
                            Status = 1,
                            SubmitedInfo = "SubmitedInfo",
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2816)
                        },
                        new
                        {
                            Id = 3,
                            Address = "Số 3, Đường 3, Phường 3, Quận 3, TP HCM",
                            Avatar = "avatar.jpg",
                            BranchId = 3,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2819),
                            District = "Quận 3",
                            Email = "emp3@emp3",
                            EmployeeCode = "EMP003",
                            Fullname = "Lê Văn Employee",
                            Password = "123",
                            PhoneNumber = "12548897451",
                            PostalCode = "700000",
                            Province = "TP HCM",
                            RoleId = 3,
                            Status = 1,
                            SubmitedInfo = "SubmitedInfo",
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2820)
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.FeeCustom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FeeCharge")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("LocationIdFrom")
                        .HasColumnType("int");

                    b.Property<int>("LocationIdTo")
                        .HasColumnType("int");

                    b.Property<decimal?>("OverWeightCharge")
                        .HasColumnType("decimal(12,2)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TimeProcess")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LocationIdFrom");

                    b.HasIndex("LocationIdTo");

                    b.HasIndex("ServiceId");

                    b.ToTable("FeeCustoms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2847),
                            FeeCharge = 35000.00m,
                            LocationIdFrom = 2,
                            LocationIdTo = 3,
                            OverWeightCharge = 2m,
                            ServiceId = 1,
                            Status = 1,
                            TimeProcess = 2,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2848)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2851),
                            FeeCharge = 45000.00m,
                            LocationIdFrom = 2,
                            LocationIdTo = 3,
                            OverWeightCharge = 3m,
                            ServiceId = 2,
                            Status = 1,
                            TimeProcess = 4,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2851)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2853),
                            FeeCharge = 50000.00m,
                            LocationIdFrom = 2,
                            LocationIdTo = 3,
                            OverWeightCharge = 4m,
                            ServiceId = 3,
                            Status = 1,
                            TimeProcess = 5,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2854)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2856),
                            FeeCharge = 60000.00m,
                            LocationIdFrom = 2,
                            LocationIdTo = 3,
                            OverWeightCharge = 5m,
                            ServiceId = 1,
                            Status = 1,
                            TimeProcess = 24,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2856)
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.GeneralSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SettingName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SettingValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GeneralSettings");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.HistoryLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeIdNextStep")
                        .HasColumnType("int");

                    b.Property<string>("HistoryNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<string>("Photos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessStep")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeIdNextStep");

                    b.HasIndex("PackageId");

                    b.ToTable("HistoryLogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2887),
                            EmployeeId = 1,
                            EmployeeIdNextStep = 2,
                            HistoryNote = "Đang chờ lấy hàng",
                            PackageId = 1,
                            Photos = "https://tars.com/photos/1",
                            ProcessStep = 0,
                            Status = 1,
                            Step = 0,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2887)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2890),
                            EmployeeId = 2,
                            EmployeeIdNextStep = 3,
                            HistoryNote = "Đang chờ lấy hàng",
                            PackageId = 2,
                            Photos = "https://tars.com/photos/2",
                            ProcessStep = 0,
                            Status = 1,
                            Step = 0,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2891)
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<decimal>("ItemValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ItemWeight")
                        .HasColumnType("int");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2918),
                            ItemName = "Quần áo",
                            ItemQuantity = 5,
                            ItemType = 0,
                            ItemValue = 1000000m,
                            ItemWeight = 2,
                            PackageId = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2919)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2922),
                            ItemName = "Giày dép",
                            ItemQuantity = 3,
                            ItemType = 1,
                            ItemValue = 500000m,
                            ItemWeight = 1,
                            PackageId = 2,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2922)
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("LocationLevel")
                        .HasColumnType("int");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LocationOf")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LocationOf");

                    b.ToTable("Locations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2946),
                            LocationLevel = 0,
                            LocationName = "TP HCM",
                            PostalCode = "700000",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2947)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2949),
                            LocationLevel = 1,
                            LocationName = "Quận 1",
                            LocationOf = 1,
                            PostalCode = "710100",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2950)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2952),
                            LocationLevel = 1,
                            LocationName = "Quận 2",
                            LocationOf = 1,
                            PostalCode = "713000",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2952)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2954),
                            LocationLevel = 1,
                            LocationName = "Quận 3",
                            LocationOf = 1,
                            PostalCode = "722000",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2955)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2957),
                            LocationLevel = 1,
                            LocationName = "Quận 4",
                            LocationOf = 1,
                            PostalCode = "754000",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2957)
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2959),
                            LocationLevel = 1,
                            LocationName = "Quận 5",
                            LocationOf = 1,
                            PostalCode = "748000",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2959)
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2961),
                            LocationLevel = 1,
                            LocationName = "Quận 6",
                            LocationOf = 1,
                            PostalCode = "746000",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2962)
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2964),
                            LocationLevel = 1,
                            LocationName = "Quận 7",
                            LocationOf = 1,
                            PostalCode = "756000",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2964)
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2966),
                            LocationLevel = 1,
                            LocationName = "Quận 8",
                            LocationOf = 1,
                            PostalCode = "751500",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2966)
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2968),
                            LocationLevel = 1,
                            LocationName = "Quận 9",
                            LocationOf = 1,
                            PostalCode = "715000",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2969)
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2971),
                            LocationLevel = 1,
                            LocationName = "Quận 10",
                            LocationOf = 1,
                            PostalCode = "740010",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2971)
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2973),
                            LocationLevel = 1,
                            LocationName = "Quận 11",
                            LocationOf = 1,
                            PostalCode = "743800",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2973)
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2975),
                            LocationLevel = 1,
                            LocationName = "Quận 12",
                            LocationOf = 1,
                            PostalCode = "729400",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2976)
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2978),
                            LocationLevel = 1,
                            LocationName = "Quận Gò Vấp",
                            LocationOf = 1,
                            PostalCode = "727010",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2978)
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2980),
                            LocationLevel = 1,
                            LocationName = "Quận Tân Bình",
                            LocationOf = 1,
                            PostalCode = "736090",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2980)
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2982),
                            LocationLevel = 1,
                            LocationName = "Quận Tân Phú",
                            LocationOf = 1,
                            PostalCode = "760000",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2983)
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2984),
                            LocationLevel = 1,
                            LocationName = "Quận Phú Nhuận",
                            LocationOf = 1,
                            PostalCode = "725060",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2985)
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2987),
                            LocationLevel = 1,
                            LocationName = "Quận Bình Thạnh",
                            LocationOf = 1,
                            PostalCode = "718440",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2987)
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2989),
                            LocationLevel = 1,
                            LocationName = "Quận Thủ Đức",
                            LocationOf = 1,
                            PostalCode = "720150",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(2989)
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AddressFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PackageNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PackageSize")
                        .HasColumnType("int");

                    b.Property<string>("PostalCodeFrom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCodeTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Step")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrackingCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceId");

                    b.HasIndex("TrackingCode")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Packages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressFrom = "Số 1, Đường 1, Phường 1, Quận 1, TP HCM",
                            AddressTo = "Số 2, Đường 2, Phường 2, Quận 2, TP HCM",
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3049),
                            NameFrom = "Nguyễn Văn A",
                            NameTo = "Trần Thị B",
                            PackageNote = "Giao hàng cẩn thận",
                            PostalCodeFrom = "700000",
                            PostalCodeTo = "700000",
                            ServiceId = 1,
                            Status = 1,
                            Step = 0,
                            TotalFee = 100000m,
                            TrackingCode = "123456789",
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3049),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            AddressFrom = "Số 2, Đường 2, Phường 2, Quận 2, TP HCM",
                            AddressTo = "Số 3, Đường 3, Phường 3, Quận 3, TP HCM",
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3053),
                            NameFrom = "Trần Thị B",
                            NameTo = "Lê Văn C",
                            PackageNote = "Giao hàng cẩn thận",
                            PostalCodeFrom = "700000",
                            PostalCodeTo = "700000",
                            ServiceId = 1,
                            Status = 1,
                            Step = 0,
                            TotalFee = 100000m,
                            TrackingCode = "987654321",
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3053),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PermissionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PermissionName = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            PermissionName = "User"
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleName = "Admin",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            RoleName = "Branch Manager",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            RoleName = "Warehouse",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            RoleName = "Delivery",
                            Status = 0
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.RoleHasPermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId1")
                        .HasColumnType("int");

                    b.Property<int>("RoleId2")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId1");

                    b.ToTable("RoleHasPermissions");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ServiceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeighFrom")
                        .HasColumnType("int");

                    b.Property<int>("WeighTo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ServiceTypeId");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3161),
                            ServiceTypeId = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3162),
                            WeighFrom = 0,
                            WeighTo = 500
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3164),
                            ServiceTypeId = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3164),
                            WeighFrom = 501,
                            WeighTo = 1000
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3166),
                            ServiceTypeId = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3167),
                            WeighFrom = 1001,
                            WeighTo = 2000
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3169),
                            ServiceTypeId = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3169),
                            WeighFrom = 2001,
                            WeighTo = 3000
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3171),
                            ServiceTypeId = 1,
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3171),
                            WeighFrom = 3001,
                            WeighTo = 10000
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.ServiceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ServiceDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ServiceTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3195),
                            ServiceDescription = "Fast and secure international delivery service",
                            ServiceName = "EMS Delivery Service",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3196)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3199),
                            ServiceDescription = "Fast and convenient express delivery service",
                            ServiceName = "Express Delivery",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3200)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3201),
                            ServiceDescription = "Reliable freight and cargo delivery solutions",
                            ServiceName = "Freight Delivery Services",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3202)
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasFilter("[Phone] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "avatar.jpg",
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3131),
                            Email = "usera@usera",
                            Fullname = "Nguyễn Văn User",
                            Password = "123",
                            Phone = "0123456789",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3132)
                        },
                        new
                        {
                            Id = 2,
                            Avatar = "avatar.jpg",
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3135),
                            Email = "userb@userb",
                            Fullname = "Trần Thị User",
                            Password = "123",
                            Phone = "0987654321",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3136)
                        },
                        new
                        {
                            Id = 3,
                            Avatar = "avatar.jpg",
                            CreatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3138),
                            Email = "userc@userc",
                            Fullname = "Lê Văn User",
                            Password = "123",
                            Phone = "023023920392",
                            Status = 1,
                            UpdatedAt = new DateTime(2024, 3, 3, 13, 48, 50, 922, DateTimeKind.Local).AddTicks(3138)
                        });
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Customer", b =>
                {
                    b.HasOne("TARS_Delivery.Models.Entities.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Employee", b =>
                {
                    b.HasOne("TARS_Delivery.Models.Entities.Branch", "Branch")
                        .WithMany("Employees")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TARS_Delivery.Models.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.FeeCustom", b =>
                {
                    b.HasOne("TARS_Delivery.Models.Entities.Location", "LocationFrom")
                        .WithMany()
                        .HasForeignKey("LocationIdFrom")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TARS_Delivery.Models.Entities.Location", "LocationTo")
                        .WithMany()
                        .HasForeignKey("LocationIdTo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TARS_Delivery.Models.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LocationFrom");

                    b.Navigation("LocationTo");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.HistoryLog", b =>
                {
                    b.HasOne("TARS_Delivery.Models.Entities.Employee", "Employee")
                        .WithMany("HistoryLogs")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TARS_Delivery.Models.Entities.Employee", "EmployeeNextStep")
                        .WithMany()
                        .HasForeignKey("EmployeeIdNextStep");

                    b.HasOne("TARS_Delivery.Models.Entities.Package", "Package")
                        .WithMany("HistoryLogs")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("EmployeeNextStep");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Item", b =>
                {
                    b.HasOne("TARS_Delivery.Models.Entities.Package", "Package")
                        .WithMany("Items")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Package");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Location", b =>
                {
                    b.HasOne("TARS_Delivery.Models.Entities.Location", "ParentLocation")
                        .WithMany("ChildLocations")
                        .HasForeignKey("LocationOf")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParentLocation");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Package", b =>
                {
                    b.HasOne("TARS_Delivery.Models.Entities.Service", "Service")
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TARS_Delivery.Models.Entities.User", "User")
                        .WithMany("Packages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Service");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.RoleHasPermission", b =>
                {
                    b.HasOne("TARS_Delivery.Models.Entities.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TARS_Delivery.Models.Entities.Role", null)
                        .WithMany("RoleHasPermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TARS_Delivery.Models.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Service", b =>
                {
                    b.HasOne("TARS_Delivery.Models.Entities.ServiceType", "ServiceType")
                        .WithMany("Services")
                        .HasForeignKey("ServiceTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ServiceType");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Branch", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Employee", b =>
                {
                    b.Navigation("HistoryLogs");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Location", b =>
                {
                    b.Navigation("ChildLocations");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Package", b =>
                {
                    b.Navigation("HistoryLogs");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.Role", b =>
                {
                    b.Navigation("RoleHasPermissions");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.ServiceType", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("TARS_Delivery.Models.Entities.User", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Packages");
                });
#pragma warning restore 612, 618
        }
    }
}
